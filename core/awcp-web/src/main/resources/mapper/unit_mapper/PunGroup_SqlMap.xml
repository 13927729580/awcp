<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="cn.org.awcp.unit.core.domain.PunGroup">
	<resultMap id="rm" type="cn.org.awcp.unit.core.domain.PunGroup">
		<result property="groupId" jdbcType="BIGINT"
			column="GROUP_ID" />
		<result property="parentGroupId" jdbcType="BIGINT"
			column="PARENT_GROUP_ID" />
		<result property="groupType" jdbcType="VARCHAR"
			column="GROUP_TYPE" />
		<result property="groupChName" jdbcType="VARCHAR"
			column="GROUP_CH_NAME" />
		<result property="groupShortName" jdbcType="VARCHAR"
			column="GROUP_SHORT_NAME" />
		<result property="groupEnName" jdbcType="VARCHAR"
			column="GROUP_EN_NAME" />
		<result property="orgCode" jdbcType="VARCHAR"
			column="ORG_CODE" />
		<result property="groupAddress" jdbcType="VARCHAR"
			column="GROUP_ADDRESS" />
		<result property="zipCode" jdbcType="VARCHAR"
			column="ZIP_CODE" />
		<result property="contactNumber" jdbcType="VARCHAR"
			column="CONTACT_NUMBER" />
		<result property="fax" jdbcType="VARCHAR"
			column="FAX" />
		<result property="groupBusinessSphere" jdbcType="VARCHAR"
			column="GROUP_BUSINESS_SPHERE" />
		<result property="createDate" jdbcType="DATE"
			column="CREATE_DATE" />
		<result property="pid" jdbcType="VARCHAR"
			column="PID" />
		<result property="number" jdbcType="VARCHAR"
			column="NUMBER" />	
	</resultMap>
	<sql id="Base_Column_List">
		GROUP_ID,
		PARENT_GROUP_ID,
		GROUP_TYPE,
		GROUP_CH_NAME,
		GROUP_SHORT_NAME,
		GROUP_EN_NAME,
		ORG_CODE,
		GROUP_ADDRESS,
		ZIP_CODE,
		CONTACT_NUMBER,
		FAX,
		GROUP_BUSINESS_SPHERE,
		CREATE_DATE,
		PID,
		NUMBER
	</sql>
	
	<sql id="Base_Column_List2">
		pp.GROUP_ID AS GROUP_ID,
		pp.PARENT_GROUP_ID AS PARENT_GROUP_ID,
		pp.GROUP_TYPE AS GROUP_TYPE,
		pp.GROUP_CH_NAME AS GROUP_CH_NAME,
		pp.GROUP_SHORT_NAME AS GROUP_SHORT_NAME,
		pp.GROUP_EN_NAME AS GROUP_EN_NAME,
		pp.ORG_CODE AS ORG_CODE,
		pp.GROUP_ADDRESS AS GROUP_ADDRESS,
		pp.ZIP_CODE AS ZIP_CODE,
		pp.CONTACT_NUMBER AS CONTACT_NUMBER,
		pp.FAX AS FAX,
		pp.GROUP_BUSINESS_SPHERE AS GROUP_BUSINESS_SPHERE,
		pp.CREATE_DATE AS CREATE_DATE,
		pp.PID AS PID,
		pp.NUMBER AS NUMBER
	</sql>

   <!-- 复杂条件的查询-->
	<sql id="Select_Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition}
									#{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition}
									#{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<!-- 所有字段等于的查询条件 -->
	<sql id="EQ_Where_Clause">
		where 1=1 
		<trim suffixOverrides=",">
			<if test="groupId != null">
				AND GROUP_ID = #{groupId}
			</if>
			<if test="parentGroupId != null">
				AND PARENT_GROUP_ID = #{parentGroupId}
			</if>
			<if test="groupType != null and groupType != ''">
				AND GROUP_TYPE = #{groupType}
			</if>

			<if test="groupChName != null and groupChName != ''">
				AND GROUP_CH_NAME like concat('%',#{groupChName},'%')
			</if>

			<if test="groupShortName != null and groupShortName != ''">
				AND GROUP_SHORT_NAME = #{groupShortName}
			</if>

			<if test="groupEnName != null and groupEnName != ''">
				AND GROUP_EN_NAME = #{groupEnName}
			</if>

			<if test="orgCode != null and orgCode != ''">
				AND ORG_CODE = #{orgCode}
			</if>

			<if test="groupAddress != null and groupAddress != ''">
				AND GROUP_ADDRESS = #{groupAddress}
			</if>

			<if test="zipCode != null and zipCode != ''">
				AND ZIP_CODE = #{zipCode}
			</if>

			<if test="contactNumber != null and contactNumber != ''">
				AND CONTACT_NUMBER = #{contactNumber}
			</if>

			<if test="fax != null and fax != ''">
				AND FAX = #{fax}
			</if>

			<if test="groupBusinessSphere != null and groupBusinessSphere != ''">
				AND GROUP_BUSINESS_SPHERE = #{groupBusinessSphere}
			</if>

			<if test="createDate != null and createDate != ''">
				AND CREATE_DATE = #{createDate}
			</if>

			<if test="pid != null and pid != ''">
				AND PID = #{pid}
			</if>
			
			<if test="number != null and number != ''">
				AND NUMBER = #{number}
			</if>
		</trim>
	</sql>
	
	<!-- 所有字段等于的查询条件 -->
	<sql id="LIKE_Where_Clause">
		where 1=1 
		<trim suffixOverrides=",">
			<if test="parentGroupId != null">
				AND PARENT_GROUP_ID = #{parentGroupId}
			</if>
			<if test="groupType != null and groupType != ''">
				AND GROUP_TYPE = #{groupType}
			</if>

			<if test="groupChName != null and groupChName != ''">
				AND GROUP_CH_NAME LIKE '${groupChName}%'
			</if>

			<if test="groupShortName != null and groupShortName != ''">
				AND GROUP_SHORT_NAME LIKE '${groupShortName}%'
			</if>

			<if test="groupEnName != null and groupEnName != ''">
				AND GROUP_EN_NAME LIKE '${groupEnName}%'
			</if>

			<if test="orgCode != null and orgCode != ''">
				AND ORG_CODE LIKE '${orgCode}%'
			</if>

			<if test="groupAddress != null and groupAddress != ''">
				AND GROUP_ADDRESS LIKE '${groupAddress}%'
			</if>

			<if test="zipCode != null and zipCode != ''">
				AND ZIP_CODE LIKE '${zipCode}%'
			</if>

			<if test="contactNumber != null and contactNumber != ''">
				AND CONTACT_NUMBER LIKE '${contactNumber}%'
			</if>

			<if test="fax != null and fax != ''">
				AND FAX LIKE '${fax}%'
			</if>

			<if test="groupBusinessSphere != null and groupBusinessSphere != ''">
				AND GROUP_BUSINESS_SPHERE LIKE '${groupBusinessSphere}%'
			</if>

			<if test="createDate != null and createDate != ''">
				AND CREATE_DATE = #{createDate}
			</if>

			<if test="pid != null and pid != ''">
				AND PID LIKE '${pid}%'
			</if>
		</trim>
	</sql>
	
	<select id="get" parameterType="java.lang.Long" resultMap="rm">
		SELECT
		<include refid="Base_Column_List" />
		FROM p_un_group
		WHERE
		GROUP_ID = #{groupId} 
	</select>
	<!-- 查询所有的ID -->
	<select id="findAllIds" resultType="java.lang.Long">
		SELECT
		GROUP_ID FROM p_un_group
	</select>
	<!-- 获取所有子孙组织 -->
	<select id="queryByPID"  parameterType="Object" resultMap="rm">
		SELECT
		<include refid="Base_Column_List" />
		FROM p_un_group
		WHERE PID LIKE #{pid}
		order by case when NUMBER is null then 0 end , NUMBER asc
	</select>
	<!-- 按Id删除 -->
	<delete id="remove" parameterType="java.lang.Long">
		DELETE FROM p_un_group
		WHERE
		GROUP_ID =
		#{groupId} 
	</delete>
	<!-- 按PositionId删除 user-group的关联关系-->
	<delete id="removeUserGroupByPosition" parameterType="java.lang.Long">
		 DELETE FROM p_un_user_group
		WHERE POSITION_ID IN(
		SELECT POSITION_ID FROM p_un_position 
		WHERE 
		GROUP_ID =
		#{groupId} )
	</delete>
	<!-- 按GroupId删除岗位 -->
	<delete id="removePosition" parameterType="java.lang.Long">
		DELETE FROM p_un_position
		WHERE
		GROUP_ID =
		#{groupId} 
	</delete>
	
	<!-- 按GroupId删除用户－组织的关联关系 -->
	<delete id="removeUserGroupByGroup" parameterType="java.lang.Long">
		DELETE FROM p_un_user_group
		WHERE
		GROUP_ID =
		#{groupId} 
	</delete>
	<!-- 按GroupId删除系统－组织的关联关系 -->
	<delete id="removeGroupSys" parameterType="java.lang.Long">
		DELETE FROM p_un_group_sys
		WHERE
		GROUP_ID =
		#{groupId} 
	</delete>
	
	<!-- 根据模糊条件批量删除 -->
	<delete id="likeBatchDelete" parameterType="String">
		DELETE FROM p_un_group
		WHERE
		PID like #{pid}"%"
	</delete>
	
	<!-- 插入 -->
	<insert id="insert" useGeneratedKeys="true"
		keyProperty="groupId">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="groupId">
			SELECT LAST_INSERT_ID()
		</selectKey>	 
		INSERT INTO p_un_group (
		GROUP_ID,
		PARENT_GROUP_ID,
		GROUP_TYPE,
		GROUP_CH_NAME,
		GROUP_SHORT_NAME,
		GROUP_EN_NAME,
		ORG_CODE,
		GROUP_ADDRESS,
		ZIP_CODE,
		CONTACT_NUMBER,
		FAX,
		GROUP_BUSINESS_SPHERE,
		CREATE_DATE,
		PID,
		LAST_EDIT_TIME,
		NUMBER
		) VALUES (
		#{groupId},
		#{parentGroupId},
		#{groupType},
		#{groupChName},
		#{groupShortName},
		#{groupEnName},
		#{orgCode},
		#{groupAddress},
		#{zipCode},
		#{contactNumber},
		#{fax},
		#{groupBusinessSphere},
		#{createDate},
		#{pid},
		sysdate(),
		#{number}
		)
	</insert>

	<select id="countAll" resultType="java.lang.Integer">
		SELECT
		count(GROUP_ID) FROM p_un_group
	</select>

	<select id="getAll" resultMap="rm">
		SELECT
		<include refid="Base_Column_List" />
		FROM p_un_group 
		order by GROUP_ID asc
	</select>

	<!-- 更新 -->
	<update id="updateSelective" parameterType="cn.org.awcp.unit.core.domain.PunGroup">
		UPDATE p_un_group
		<set>
			<if test="1==1">
				LAST_EDIT_TIME = sysdate(),
			</if>
			<if test="parentGroupId!=null">
				PARENT_GROUP_ID = #{parentGroupId},
			</if>
			<if test="groupType!=null">
				GROUP_TYPE = #{groupType},
			</if>
			<if test="groupChName!=null">
				GROUP_CH_NAME = #{groupChName},
			</if>
			<if test="groupShortName!=null">
				GROUP_SHORT_NAME = #{groupShortName},
			</if>
			<if test="groupEnName!=null">
				GROUP_EN_NAME = #{groupEnName},
			</if>
			<if test="orgCode!=null">
				ORG_CODE = #{orgCode},
			</if>
			<if test="groupAddress!=null">
				GROUP_ADDRESS = #{groupAddress},
			</if>
			<if test="zipCode!=null">
				ZIP_CODE = #{zipCode},
			</if>
			<if test="contactNumber!=null">
				CONTACT_NUMBER = #{contactNumber},
			</if>
			<if test="fax!=null">
				FAX = #{fax},
			</if>
			<if test="groupBusinessSphere!=null">
				GROUP_BUSINESS_SPHERE = #{groupBusinessSphere},
			</if>
			<if test="createDate!=null">
				CREATE_DATE = #{createDate}
			</if>
			<if test="pid!=null">
				PID = #{pid}
			</if>
			<if test="number!=null">
				NUMBER = #{number}
			</if>
		</set>
		WHERE
		GROUP_ID = #{groupId}	</update>

	<update id="update" parameterType="cn.org.awcp.unit.core.domain.PunGroup">
		UPDATE p_un_group SET
		PARENT_GROUP_ID = #{parentGroupId},
		GROUP_TYPE = #{groupType},
		GROUP_CH_NAME = #{groupChName},
		GROUP_SHORT_NAME = #{groupShortName},
		GROUP_EN_NAME = #{groupEnName},
		ORG_CODE = #{orgCode},
		GROUP_ADDRESS = #{groupAddress},
		ZIP_CODE = #{zipCode},
		CONTACT_NUMBER = #{contactNumber},
		FAX = #{fax},
		GROUP_BUSINESS_SPHERE = #{groupBusinessSphere},
		CREATE_DATE = #{createDate},
		PID = #{pid},
		LAST_EDIT_TIME = sysdate(),
		NUMBER =#{number}
		WHERE
		GROUP_ID = #{groupId} 	</update>


	
	<select id="selectByExample" resultMap="rm"
		parameterType="cn.org.awcp.core.domain.BaseExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from p_un_group
		<if test="_parameter != null">
			<include refid="Select_Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="start !=0 or limit!=0">
			limit #{start},#{limit}
		</if>
	</select>
	<select id="eqQueryList" resultMap="rm" parameterType="Object">
		select
		<include refid="Base_Column_List" />
		from p_un_group
		<include refid="EQ_Where_Clause" />
	</select>
	<!--  -->
	<select id="searchGroupList" resultMap="rm" parameterType="Object">
		select
		<include refid="Base_Column_List" />
		from p_un_group
		<include refid="LIKE_Where_Clause" />
	</select>
	
	
	<!-- get group entity by user id -->
	<select id="getByUserID" parameterType="java.lang.Long" resultMap="rm">
		select <include refid="Base_Column_List" />
		from p_un_group g where g.GROUP_ID in (select m.group_id from p_un_user_group m where m.user_id = #{userId})
		<!--from p_un_group g where g.GROUP_ID in (select m.group_id from p_un_membership m where m.user_id = #{userId})-->
	</select>
	
	<!-- find group by BaseExample -->
	<select id="selectByExampleWithUser" resultMap="rm"
		parameterType="cn.org.awcp.core.domain.BaseExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List2" />
		from p_un_group pp
		LEFT JOIN p_un_user_group ug ON ug.GROUP_ID = pp.GROUP_ID
		LEFT JOIN p_un_user_base_info u ON u.USER_ID = ug.USER_ID
		<if test="_parameter != null">
			<include refid="Select_Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="start !=0 or limit!=0">
			limit #{start},#{limit}
		</if>
	</select>
	
	<!-- find group by BaseExample -->
	<select id="queryCountByExampleWithUser" resultType="INTEGER" 
		parameterType="cn.org.awcp.core.domain.BaseExample">
		select count(*) as C from (
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List2" />
		from p_un_group pp
		LEFT JOIN p_un_user_group ug ON ug.GROUP_ID = pp.GROUP_ID
		LEFT JOIN p_un_user_base_info u ON u.USER_ID = ug.USER_ID
		<if test="_parameter != null">
			<include refid="Select_Example_Where_Clause" />
		</if>
		) tmpcount
		
	</select>
	
	<!-- query group entity that has orgCode -->
	<select id="queryGroupWithOrgCode" parameterType="java.lang.Long" resultMap="rm">
		select <include refid="Base_Column_List" />
		from p_un_group g where g.ORG_CODE is not null;
	</select>
	
	<!-- query group with orgCode but not PID -->
	<select id="queryhasOrgCodeNotPID">
		select <include refid="Base_Column_List" />
		from p_un_group g where g.PARENT_GROUP_ID is null and g.ORG_CODE = #{orgCode};
	</select>
	
	<select id="queryCountByExample" resultType="INTEGER" 
		parameterType="cn.org.awcp.core.domain.BaseExample">
		select count(*) as C from (
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from p_un_group
		<if test="_parameter != null">
			<include refid="Select_Example_Where_Clause" />
		</if>
		) tmpcount
		
	</select>	
			
</mapper>

